name: jamduna test vectors

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["src-build"]
    types:
      - completed

jobs:
  import:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      - name: Checkout JAM test vectors
        uses: actions/checkout@v4
        with:
          repository: jam-duna/jamtestnet
          path: "./jamdunavectors"
          # NOTE: another instance below. Should probably be re-used somehow.
          ref: 6d41bb2e8f4d60dc1806df42401363b54f956c0a
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: rm -rf ./database
      - run: npm start -- --genesis ./jamdunavectors/chainspecs/state_snapshots/genesis-tiny.json --genesis-block ./jamdunavectors/chainspecs/blocks/genesis-tiny.json import ./jamdunavectors/data/safrole/blocks/*.json | tee safrole.txt
      # TODO [ToDr] would probably be best to have some CLI to display the best block and test with that?
      #             or a special mode that would import the blocks for test purposes and print some extra output.
      - run: |
          grep -q "Best block: #60 (0x293c3d1d15d58871a9ffd2bbdbd48d59f3874e6bfac644ec7b8f975263e7fabe)" safrole.txt || {
            echo "Seems that the blocks where not imported correctly"
            exit 1
          }
      - run: rm -rf ./database
      - run: npm start -- --genesis ./jamdunavectors/chainspecs/state_snapshots/genesis-tiny.json --genesis-block ./jamdunavectors/chainspecs/blocks/genesis-tiny.json import ./jamdunavectors/data/fallback/blocks/*.json | tee fallback.txt
      - run: |
          grep -q "Best block: #60 (0x5da17ce23b742d103fd40c20353db271601943a260653802f7645da319e10fd8)" fallback.txt || {
            echo "Seems that the blocks where not imported correctly"
            exit 1
          }

  state_transition:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Delete previous comment on PR
        # Don't attempt to comment if PR is coming from a fork.
        if: ${{ always() && github.event.pull_request.head.repo.full_name == github.repository }}
        uses: thollander/actions-comment-pull-request@v3
        with:
          mode: delete
          comment-tag: jamdunavectors
      - uses: actions/checkout@v4
      - name: Checkout JAM test vectors
        uses: actions/checkout@v4
        with:
          repository: jam-duna/jamtestnet
          path: "./jamdunavectors"
          ref: 6d41bb2e8f4d60dc1806df42401363b54f956c0a
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm start -w @typeberry/test-runner jamduna
      - name: Display results
        if: always()
        run: cat ./dist/jamdunavectors.txt
      - name: Comment PR
        # Don't attempt to comment if PR is coming from a fork.
        if: ${{ always() && github.event.pull_request.head.repo.full_name == github.repository }}
        uses: thollander/actions-comment-pull-request@v3
        with:
          file-path: ./dist/jamdunavectors.txt
          comment-tag: jamdunavectors
      - name: Upload new results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          path: |
            ./dist/jamdunavectors
          name: jamdunavectors-results
